{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\daeun.kim\\\\CarReserve\\\\car-front-react\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react'; // must go before plugins\n\nimport dayGridPlugin from '@fullcalendar/daygrid'; // a plugin!\n\nimport interactionPlugin from '@fullcalendar/interaction';\nimport Popup from './components/popup';\nimport axios from 'axios';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Calendar() {\n  _s();\n\n  const [event_data, set_event_data] = useState([]);\n  const [popup, setPopup] = useState({\n    open: false,\n    title: \"\",\n    message: \"\",\n    callback: false\n  });\n  const [date, setDate] = useState(\"\");\n  useEffect(() => {\n    async function readEvent() {\n      const url = \"http://localhost:1323/events/all\"; //const url = \"https://shrouded-headland-42492.herokuapp.com/events/all\"\n\n      const response = await axios.get(url);\n      set_event_data(response.data.event_arr);\n      console.log(\"성공\");\n      console.log(response.data);\n    }\n\n    readEvent();\n  }, []);\n\n  const closePopup = () => {\n    setPopup({\n      open: false\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Popup, {\n      date: date,\n      open: popup.open,\n      close: closePopup,\n      setPopup: setPopup,\n      message: popup.message,\n      title: popup.title,\n      callback: popup.callback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, interactionPlugin],\n      editable: true,\n      selectable: true,\n      displayEventTime: false,\n      contentHeight: 600,\n      eventClick: handleEventClick,\n      dateClick: function (info) {\n        setDate(info.date);\n        setPopup({\n          open: true,\n          title: \"차량 예약하기\",\n          message: \"차종과 사용자명을 입력해주세요.\"\n        });\n        return;\n      },\n      events: event_data,\n      titleFormat: function (date) {\n        return `${date.date.year}년 ${date.date.month + 1}월`;\n      },\n      customButtons: {\n        eventAddButton: {\n          text: '차량예약하기',\n          click: function () {\n            setPopup({\n              open: true,\n              title: \"차량 예약하기\",\n              message: \"차종과 사용자명을 입력해주세요.\"\n            });\n            return;\n          }\n        },\n        eventDeleteButton: {\n          text: '예약취소',\n          click: function () {\n            alert(\"관리자에게 문의해주세요\");\n          }\n        }\n      },\n      headerToolbar: {\n        left: 'eventDeleteButton',\n        center: 'prev title next',\n        right: 'today'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Calendar, \"a7aPvzzLQTkvNdUcEFxijnJGs1o=\");\n\n_c = Calendar;\n\nfunction handleEventClick(info) {\n  // bind with an arrow function\n  //alert(info.event.title + '\\n' + info.event.display);\n  // change the border color just for fun\n  //info.el.style.backgroundColor = 'green';\n  //axios.delete(`https://shrouded-headland-42492.herokuapp.com/events/${info.event.id}`)\n  const id = info.event.id;\n  axios.delete(`http://localhost:1323/events/${id}`);\n  alert(info.event.id);\n}\n\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","interactionPlugin","Popup","axios","Calendar","event_data","set_event_data","popup","setPopup","open","title","message","callback","date","setDate","readEvent","url","response","get","data","event_arr","console","log","closePopup","handleEventClick","info","year","month","eventAddButton","text","click","eventDeleteButton","alert","left","center","right","id","event","delete"],"sources":["C:/Users/daeun.kim/CarReserve/car-front-react/src/App.js"],"sourcesContent":["import React, { useState, useEffect} from 'react';\nimport FullCalendar from '@fullcalendar/react' // must go before plugins\nimport dayGridPlugin from '@fullcalendar/daygrid' // a plugin!\nimport interactionPlugin from '@fullcalendar/interaction'\nimport Popup from './components/popup';\nimport axios from 'axios';\nimport './index.css';\n\nfunction Calendar() {\n  const [event_data, set_event_data] = useState([]);\n  const [popup, setPopup] = useState({open: false, title: \"\", message: \"\", callback: false});\n  const [date, setDate] = useState(\"\");\n  useEffect(()=>{\n    async function readEvent() {\n      const url = \"http://localhost:1323/events/all\";\n      //const url = \"https://shrouded-headland-42492.herokuapp.com/events/all\"\n      const response = await axios.get(url);\n      set_event_data(response.data.event_arr);\n      console.log(\"성공\");\n      console.log(response.data);\n    }\n    readEvent();\n  },[]);\n\n  const closePopup = () => {\n    setPopup({\n      open: false\n    });\n  }\n\n  return (\n    <>\n    <Popup date = {date} open = {popup.open} close={closePopup} setPopup = {setPopup} message = {popup.message} title = {popup.title} callback = {popup.callback}/>\n    <FullCalendar\n    plugins={[dayGridPlugin, interactionPlugin]}\n    editable\n    selectable\n    displayEventTime={false}\n    contentHeight={600}\n    eventClick={handleEventClick}\n    dateClick={function(info){\n      setDate(info.date);\n      setPopup({\n        open: true,\n        title: \"차량 예약하기\",\n        message: \"차종과 사용자명을 입력해주세요.\"\n      });\n      return;\n    }}\n    events={event_data}\n    titleFormat={function(date) {\n      return `${date.date.year}년 ${date.date.month + 1}월`;\n    }}\n    customButtons={{eventAddButton: {text: '차량예약하기',\n    click: function() {\n      setPopup({\n        open: true,\n        title: \"차량 예약하기\",\n        message: \"차종과 사용자명을 입력해주세요.\"\n      });\n      return;\n    }\n  }, \n  eventDeleteButton: {text: '예약취소', click: function() {\n    alert(\"관리자에게 문의해주세요\");\n  }}}\n}\n    headerToolbar={{left: 'eventDeleteButton',\n    center: 'prev title next',\n    right: 'today'}}\n  />\n  </>\n  )\n}\n\nfunction handleEventClick(info) { // bind with an arrow function\n  //alert(info.event.title + '\\n' + info.event.display);\n  // change the border color just for fun\n  //info.el.style.backgroundColor = 'green';\n  //axios.delete(`https://shrouded-headland-42492.herokuapp.com/events/${info.event.id}`)\n  const id = info.event.id;\n  axios.delete(`http://localhost:1323/events/${id}`)\n  alert(info.event.id)\n}\n\nexport default Calendar;"],"mappings":"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"},"metadata":{},"sourceType":"module"}